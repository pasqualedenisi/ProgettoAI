%block(Row,Col,Occupier).
%:-truck(T), not #count{Row,Col:block(Row,Col,T)}=3.
%:-car(C), not #count{Row,Col:block(Row,Col,C)}=2.
%:-block(Row,Col,V1),block(Row,Col,V2),V1!=V2.
%move(Time,V,Dir,Numpos).

%row(1..5).
%col(1..5).
%cell(R,C):-row(R),col(C).
%direction(forward).
%direction(backward).

%maxMoves(3).

% non è possibile che il blocco vincente sia occupato da uno che non è la mia
%:-block(R,C,I), win(R,C), myCar(Id,Or), I!=Id.

%move(0).
%pivot(row,col,v)
%occupied(R,C,V,M):-pivot(R,C,V),car(V,_),move(M).
%occupied(R+1,C,V,M):-pivot(R,C,V),car(V,vertical),move(M).
%occupied(R,C+1,V,M):-pivot(R,C,V),car(V,horizontal),move(M).

%occupied(R,C,V,M):-pivot(R,C,V),truck(V,_),move(M).
%occupied(R+1,C,V,M):-pivot(R,C,V),truck(V,vertical),move(M).
%occupied(R+2,C,V,M):-pivot(R,C,V),truck(V,vertical),move(M).
%occupied(R,C+1,V,M):-pivot(R,C,V),truck(V,horizontal),move(M).
%occupied(R,C+2,V,M):-pivot(R,C,V),truck(V,horizontal),move(M).

%non posso generare una posizione se ne esiste una piu nuova
%shift(1..5).
%moving(V,S,D,M+1)|nonmoving(V,S,D,M+1):-pivot(R,C,V),car(V,O),shift(S),direction(D),move(M),M<Max,maxMoves(Max).
%:-moving(_,_,D1,M),moving(_,_,D2,M),D1!=D2.
%:-moving(_,S1,_,M),moving(_,S2,_,M),S1!=S2.
%:-moving(V1,_,_,M),moving(V2,_,_,M),V1!=V2.
%move(M):-moving(V,S,D,M).



%Sommare iterativamente
%number(1..10).
%sum(0,0).
%previous(N,N-1):-number(N).
%sum(S+N,N):-number(N),sum(S,M),previous(N,M).
%totsum(T):-sum(T,10).