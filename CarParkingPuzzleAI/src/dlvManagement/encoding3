%livello 1
%car(2,horizontal). pivot(0,0,2,0).
%car(3,horizontal). pivot(0,4,3,0). 
%car(4,vertical). pivot(1,0,4,0). 
%car(5,vertical). pivot(1,4,5,0). 
%car(6,vertical). pivot(1,5,6,0).
%car(7,horizontal). pivot(5,3,7,0).
%truck(8,vertical). pivot(3,0,8,0).
%truck(9,vertical). pivot(2,3,9,0).
%car(1,horizontal). pivot(2,1,1,0).
%mycar(1).
%win(2,5).

%livello 2
%car(1,horizontal). pivot(2,0,1,0).
%car(2,horizontal). pivot(0,0,2,0).
%car(3,horizontal). pivot(1,1,3,0).
%car(4,horizontal). pivot(0,4,4,0). %
%car(5,vertical). pivot(1,4,5,0). %
%car(6,vertical). pivot(2,2,6,0). %
%car(7,vertical). pivot(4,0,7,0).
%car(8,vertical). pivot(4,1,8,0).
%car(9,horizontal). pivot(5,2,9,0). %
%car(10,horizontal). pivot(4,3,10,0). %
%truck(11,vertical). pivot(0,3,11,0). %
%mycar(1).
%win(2,5).



rows(6).
columns(6).
row(0..5).
column(0..5).

%maxMoves(7).
%possibleMoves(0..5).

direction(1,forward).
direction(-1,backward).


movedone(M):-occupied(_,_,_,_,_,_,M).
%occupied(Row,Col,Veh,IsPivot,isCar,Ori,Mov)
occupied(R,C,V,1,1,O,M):-pivot(R,C,V,M),car(V,O).
occupied(R+1,C,V,0,1,vertical,M):-occupied(R,C,V,1,1,vertical,M).
occupied(R,C+1,V,0,1,horizontal,M):-occupied(R,C,V,1,1,horizontal,M).

occupied(R,C,V,1,0,O,M):-pivot(R,C,V,M),truck(V,O).
occupied(R+1,C,V,0,0,vertical,M):-occupied(R,C,V,1,0,vertical,M).
occupied(R+2,C,V,0,0,vertical,M):-occupied(R,C,V,1,0,vertical,M).
occupied(R,C+1,V,0,0,horizontal,M):-occupied(R,C,V,1,0,horizontal,M).
occupied(R,C+2,V,0,0,horizontal,M):-occupied(R,C,V,1,0,horizontal,M).

busy(R,C,M):-occupied(R,C,_,_,_,_,M).
free(R,C,M):-not busy(R,C,M), row(R), column(C), movedone(M).


%canGo(Vehicle,Positions,Direction,Orientation,Row,Col,isCar,Move)
%canGo car
    %forward
canGo(Car,1,forward,vertical,Row,Col,1,M):-occupied(Row,Col,Car,1,1,vertical,M),rows(R),Row+2<R,free(Row+2,Col,M).
canGo(C,N+1,forward,vertical,Row,Col,1,M):-canGo(C,N,forward,vertical,Row,Col,1,M),rows(R),Row+2+N<R,free(Row+2+N,Col,M).
canGo(Car,1,forward,horizontal,Row,Col,1,M):-occupied(Row,Col,Car,1,1,horizontal,M),columns(C),Col+2<C,free(Row,Col+2,M).
canGo(C,N+1,forward,horizontal,Row,Col,1,M):-canGo(C,N,forward,horizontal,Row,Col,1,M),columns(NCol),Col+2+N<NCol,free(Row,Col+2+N,M).
    
    %backward
canGo(Car,1,backward,vertical,Row,Col,1,M):-occupied(Row,Col,Car,1,1,vertical,M),Row>0,free(Row-1,Col,M).
canGo(C,N+1,backward,vertical,Row,Col,1,M):-canGo(C,N,backward,vertical,Row,Col,1,M),Row-N>0,free(Row-N-1,Col,M).
canGo(Car,1,backward,horizontal,Row,Col,1,M):-occupied(Row,Col,Car,1,1,horizontal,M),Col>0,free(Row,Col-1,M).
canGo(C,N+1,backward,horizontal,Row,Col,1,M):-canGo(C,N,backward,horizontal,Row,Col,1,M),Col-N>0,free(Row,Col-N-1,M).


%canGo truck
    %forward
canGo(Truck,1,forward,vertical,Row,Col,0,M):-occupied(Row,Col,Truck,1,0,vertical,M),rows(R),Row+3<R,free(Row+3,Col,M).
canGo(T,N+1,forward,vertical,Row,Col,0,M):-canGo(T,N,forward,vertical,Row,Col,0,M),rows(R),Row+3+N<R,free(Row+3+N,Col,M).
canGo(Truck,1,forward,horizontal,Row,Col,0,M):-occupied(Row,Col,Truck,1,0,horizontal,M),columns(NCol),Col+3<NCol,free(Row,Col+3,M).
canGo(T,N+1,forward,horizontal,Row,Col,0,M):-canGo(T,N,forward,horizontal,Row,Col,0,M),columns(NCol),Col+3+N<NCol,free(Row,Col+3+N,M).

    %backward
canGo(Truck,1,backward,vertical,Row,Col,0,M):-occupied(Row,Col,Truck,1,0,vertical,M),Row>0,free(Row-1,Col,M).
canGo(T,N+1,backward,vertical,Row,Col,0,M):-canGo(T,N,backward,vertical,Row,Col,0,M),Row-N>0,free(Row-N-1,Col,M).
canGo(Truck,1,backward,horizontal,Row,Col,0,M):-occupied(Row,Col,Truck,1,0,horizontal,M),Col>0,free(Row,Col-1,M).
canGo(T,N+1,backward,horizontal,Row,Col,0,M):-canGo(T,N,backward,horizontal,Row,Col,0,M),Col-N>0,free(Row,Col-N-1,M).


%move(Vehicle,NSteps,Direction,Orientation,Row,Col,isCar,Time)
move(V,N,D,O,R,C,T,M+1)|nonmove(V,N,D,O,R,C,T,M+1):-canGo(V,N,D,O,R,C,T,M),M<MMoves,maxMoves(MMoves).
:-move(V1,N1,D1,O1,R1,C1,T1,M),move(V2,N2,D2,O2,R2,C2,T2,M),V1!=V2.
:-move(V1,N1,D1,O1,R1,C1,T1,M),move(V2,N2,D2,O2,R2,C2,T2,M),D1!=D2.
:-move(V1,N1,D1,O1,R1,C1,T1,M),move(V2,N2,D2,O2,R2,C2,T2,M),N1!=N2.

pivot(R+S,C,V,M):-move(V,N,DW,vertical,R,C,T,M),S=N*D,direction(D,DW).
pivot(R,C+S,V,M):-move(V,N,DW,horizontal,R,C,T,M),S=N*D,direction(D,DW).

moved(V,M):-move(V,N,D,O,R,C,T,M).
pivot(R,C,V,M):-pivot(R,C,V,M-1),not moved(V,M),move(_,_,_,_,_,_,_,M).

:-#count{V,N,D,O,R,C,T,M:move(V,N,D,O,R,C,T,M)}<MMoves, maxMoves(MMoves).
:-not occupied(R,C,Car,0,1,Ori,M), win(R,C), maxMoves(M), mycar(Car), car(Car,Ori).